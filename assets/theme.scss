/*================ Variables ================*/

// Grid
$grid-columns: 12 !default;
$gutter-width: 1rem !default;
$outer-margin: 2rem !default;

$section-spacing: 55px;
$section-spacing-small: 35px;

$breakpoints:
	sm 48em 46rem,
	md 62em 61rem,
	lg 75em 71rem !default;
$grid-max-width: 980px !default;

// Colors
$body-bg: #fff;
$body-color: #010101;
$btn-primary: #000;
$btn-primary-text: #fff;

$link-color: #8f8f8f;

$input-border-color: #949494;
$color-success: #009688;
$color-success-bg: #e0f2f1;
$color-error: #f44336;
$color-error-bg: #ffebee;

$color-text-field: #fff;
$color-text-field-text: $body-color;
$color-disabled: #f4f4f4;
$color-disabled-border: #f4f4f4;

// Sizes
$font-size-base: 16px;

$svg-select-icon: #{'//cdn.shopify.com/s/files/1/0317/0359/7193/t/1/assets/ico-select.svg?2'};

// Flexbox Mixins
// http://philipwalton.github.io/solved-by-flexbox/
// https://github.com/philipwalton/solved-by-flexbox
//
// Copyright (c) 2013 Brian Franco
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// This is a set of mixins for those who want to mess around with flexbox
// using the native support of current browsers. For full support table
// check: http://caniuse.com/flexbox
//
// Basically this will use:
//
// * Fallback, old syntax (IE10, mobile webkit browsers - no wrapping)
// * Final standards syntax (FF, Safari, Chrome, IE11, Opera)
//
// This was inspired by:
//
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
//
// With help from:
//
// * http://w3.org/tr/css3-flexbox/
// * http://the-echoplex.net/flexyboxes/
// * http://msdn.microsoft.com/en-us/library/ie/hh772069(v=vs.85).aspx
// * http://css-tricks.com/using-flexbox/
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
// * https://developer.mozilla.org/en-us/docs/web/guide/css/flexible_boxes

//----------------------------------------------------------------------

// Flexbox Containers
//
// The 'flex' value causes an element to generate a block-level flex
// container box.
//
// The 'inline-flex' value causes an element to generate a inline-level
// flex container box.
//
// display: flex | inline-flex
//
// http://w3.org/tr/css3-flexbox/#flex-containers
//
// (Placeholder selectors for each type, for those who rather @extend)

@mixin display-flexbox {
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;
}

%flexbox { @include display-flexbox; }

//----------------------------------

@mixin inline-flex {
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

%inline-flex { @include inline-flex; }

//----------------------------------------------------------------------

// Flexbox Direction
//
// The 'flex-direction' property specifies how flex items are placed in
// the flex container, by setting the direction of the flex container's
// main axis. This determines the direction that flex items are laid out in.
//
// Values: row | row-reverse | column | column-reverse
// Default: row
//
// http://w3.org/tr/css3-flexbox/#flex-direction-property

@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
	} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
	} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
	}
	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}
// Shorter version:
@mixin flex-dir($args...) { @include flex-direction($args...); }

//----------------------------------------------------------------------

// Flexbox Wrap
//
// The 'flex-wrap' property controls whether the flex container is single-line
// or multi-line, and the direction of the cross-axis, which determines
// the direction new lines are stacked in.
//
// Values: nowrap | wrap | wrap-reverse
// Default: nowrap
//
// http://w3.org/tr/css3-flexbox/#flex-wrap-property

@mixin flex-wrap($value: nowrap) {
	// No Webkit Box fallback.
	-webkit-flex-wrap: $value;
	-moz-flex-wrap: $value;
	@if $value == nowrap {
		-ms-flex-wrap: none;
	} @else {
		-ms-flex-wrap: $value;
	}
	flex-wrap: $value;
}

//----------------------------------------------------------------------

// Flexbox Flow (shorthand)
//
// The 'flex-flow' property is a shorthand for setting the 'flex-direction'
// and 'flex-wrap' properties, which together define the flex container's
// main and cross axes.
//
// Values: <flex-direction> | <flex-wrap>
// Default: row nowrap
//
// http://w3.org/tr/css3-flexbox/#flex-flow-property

@mixin flex-flow($values: (row nowrap)) {
	// No Webkit Box fallback.
	-webkit-flex-flow: $values;
	-moz-flex-flow: $values;
	-ms-flex-flow: $values;
	flex-flow: $values;
}

//----------------------------------------------------------------------

// Flexbox Order
//
// The 'order' property controls the order in which flex items appear within
// their flex container, by assigning them to ordinal groups.
//
// Default: 0
//
// http://w3.org/tr/css3-flexbox/#order-property

@mixin order($int: 0) {
	-webkit-box-ordinal-group: $int + 1;
	-webkit-order: $int;
	-moz-order: $int;
	-ms-flex-order: $int;
	order: $int;
}

//----------------------------------------------------------------------

// Flexbox Grow
//
// The 'flex-grow' property sets the flex grow factor. Negative numbers
// are invalid.
//
// Default: 0
//
// http://w3.org/tr/css3-flexbox/#flex-grow-property

@mixin flex-grow($int: 0) {
	-webkit-box-flex: $int;
	-webkit-flex-grow: $int;
	-moz-flex-grow: $int;
	-ms-flex-positive: $int;
	flex-grow: $int;
}

//----------------------------------------------------------------------

// Flexbox Shrink
//
// The 'flex-shrink' property sets the flex shrink factor. Negative numbers
// are invalid.
//
// Default: 1
//
// http://w3.org/tr/css3-flexbox/#flex-shrink-property

@mixin flex-shrink($int: 1) {
	-webkit-flex-shrink: $int;
	-moz-flex-shrink: $int;
	-ms-flex-negative: $int;
	flex-shrink: $int;
}

//----------------------------------------------------------------------

// Flexbox Basis
//
// The 'flex-basis' property sets the flex basis. Negative lengths are invalid.
//
// Values: Like "width"
// Default: auto
//
// http://www.w3.org/TR/css3-flexbox/#flex-basis-property

@mixin flex-basis($value: auto) {
	-webkit-flex-basis: $value;
	-moz-flex-basis: $value;
	-ms-flex-preferred-size: $value;
	flex-basis: $value;
}

//----------------------------------------------------------------------

// Flexbox "Flex" (shorthand)
//
// The 'flex' property specifies the components of a flexible length: the
// flex grow factor and flex shrink factor, and the flex basis. When an
// element is a flex item, 'flex' is consulted instead of the main size
// property to determine the main size of the element. If an element is
// not a flex item, 'flex' has no effect.
//
// Values: none | <flex-grow> <flex-shrink> || <flex-basis>
// Default: See individual properties (1 1 0).
//
// http://w3.org/tr/css3-flexbox/#flex-property

@mixin flex($fg: 1, $fs: null, $fb: null) {

	// Set a variable to be used by box-flex properties
	$fg-boxflex: $fg;

	// Box-Flex only supports a flex-grow value so let's grab the
	// first item in the list and just return that.
	@if type-of($fg) == 'list' {
		$fg-boxflex: nth($fg, 1);
	}

	-webkit-box-flex: $fg-boxflex;
	-webkit-flex: $fg $fs $fb;
	-moz-box-flex: $fg-boxflex;
	-moz-flex: $fg $fs $fb;
	-ms-flex: $fg $fs $fb;
	flex: $fg $fs $fb;
}

//----------------------------------------------------------------------

// Flexbox Justify Content
//
// The 'justify-content' property aligns flex items along the main axis
// of the current line of the flex container. This is done after any flexible
// lengths and any auto margins have been resolved. Typically it helps distribute
// extra free space leftover when either all the flex items on a line are
// inflexible, or are flexible but have reached their maximum size. It also
// exerts some control over the alignment of items when they overflow the line.
//
// Note: 'space-*' values not supported in older syntaxes.
//
// Values: flex-start | flex-end | center | space-between | space-around
// Default: flex-start
//
// http://w3.org/tr/css3-flexbox/#justify-content-property

@mixin justify-content($value: flex-start) {
	@if $value == flex-start {
		-webkit-box-pack: start;
		-ms-flex-pack: start;
	} @else if $value == flex-end {
		-webkit-box-pack: end;
		-ms-flex-pack: end;
	} @else if $value == space-between {
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
	} @else if $value == space-around {
		-ms-flex-pack: distribute;
	} @else {
		-webkit-box-pack: $value;
		-ms-flex-pack: $value;
	}
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
}
// Shorter version:
@mixin flex-just($args...) { @include justify-content($args...); }

//----------------------------------------------------------------------

// Flexbox Align Items
//
// Flex items can be aligned in the cross axis of the current line of the
// flex container, similar to 'justify-content' but in the perpendicular
// direction. 'align-items' sets the default alignment for all of the flex
// container's items, including anonymous flex items. 'align-self' allows
// this default alignment to be overridden for individual flex items. (For
// anonymous flex items, 'align-self' always matches the value of 'align-items'
// on their associated flex container.)
//
// Values: flex-start | flex-end | center | baseline | stretch
// Default: stretch
//
// http://w3.org/tr/css3-flexbox/#align-items-property

@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
	}
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}

//----------------------------------

// Flexbox Align Self
//
// Values: auto | flex-start | flex-end | center | baseline | stretch
// Default: auto

@mixin align-self($value: auto) {
	// No Webkit Box Fallback.
	-webkit-align-self: $value;
	-moz-align-self: $value;
	@if $value == flex-start {
		-ms-flex-item-align: start;
	} @else if $value == flex-end {
		-ms-flex-item-align: end;
	} @else {
		-ms-flex-item-align: $value;
	}
	align-self: $value;
}

//----------------------------------------------------------------------

// Flexbox Align Content
//
// The 'align-content' property aligns a flex container's lines within the
// flex container when there is extra space in the cross-axis, similar to
// how 'justify-content' aligns individual items within the main-axis. Note,
// this property has no effect when the flexbox has only a single line.
//
// Values: flex-start | flex-end | center | space-between | space-around | stretch
// Default: stretch
//
// http://w3.org/tr/css3-flexbox/#align-content-property

@mixin align-content($value: stretch) {
	// No Webkit Box Fallback.
	-webkit-align-content: $value;
	-moz-align-content: $value;
	@if $value == flex-start {
		-ms-flex-line-pack: start;
	} @else if $value == flex-end {
		-ms-flex-line-pack: end;
	} @else {
		-ms-flex-line-pack: $value;
	}
	align-content: $value;
}

/*
 Reset user agent
 */
*,
*::before,
*::after {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
	margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
	display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
	font-size: 2em;
	margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
	box-sizing: content-box; /* 1 */
	height: 0; /* 1 */
	overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
	font-family: monospace, monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
	background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
	border-bottom: none; /* 1 */
	text-decoration: underline; /* 2 */
	text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
	font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
	font-family: monospace, monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
	font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */

img {
	border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
	overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
	text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
	-webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
	padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
	box-sizing: border-box; /* 1 */
	color: inherit; /* 2 */
	display: table; /* 1 */
	max-width: 100%; /* 1 */
	padding: 0; /* 3 */
	white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
	vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
	overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
	box-sizing: border-box; /* 1 */
	padding: 0; /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
	height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
	display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
	display: list-item;
}
/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
	display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
	display: none;
}

a,
button,
[role="button"],
input,
label,
select,
textarea {
	touch-action: manipulation;
}

$gutter-compensation: $gutter-width * .5 * -1;
$half-gutter-width: $gutter-width * .5;

.container {
	box-sizing: border-box;
	max-width: $grid-max-width;
	margin: 0 auto;
}

.container-fluid {
	margin-right: auto;
	margin-left: auto;
	padding-right: $outer-margin;
	padding-left: $outer-margin;
}

.row {
	box-sizing: border-box;
	@include display-flexbox();
	@include flex(0, 1, auto);
	@include flex-direction(row);
	@include flex-wrap(wrap);
	margin-right: $gutter-compensation;
	margin-left: $gutter-compensation;
}

.row.reverse {
	@include flex-direction(row-reverse);
}

.col.reverse {
	@include flex-direction(column-reverse);
}

@mixin flexboxgrid-sass-col-common {
	box-sizing: border-box;

	// split @include flex(0, 0, auto) into individual props
	@include flex-grow(0);
	@include flex-shrink(0);

	// we leave @include flex-basis(auto) out of common because
	// in some spots we need it and some we dont
	// more why here: https://github.com/kristoferjoseph/flexboxgrid/issues/126

	padding-right: $half-gutter-width;
	padding-left: $half-gutter-width;
}

$name: xs;
.col-#{$name} {
	@include flexboxgrid-sass-col-common;
	@include flex-basis(auto);
}
@for $i from 1 through $grid-columns {
	.col-#{$name}-#{$i} {
		@include flexboxgrid-sass-col-common;
		@include flex-basis(100% / $grid-columns * $i);
		max-width: 100% / $grid-columns * $i;
	}
}
@for $i from 0 through $grid-columns {
	.col-#{$name}-offset-#{$i} {
		@include flexboxgrid-sass-col-common;
		@if $i == 0 {
			margin-left: 0;
		} @else {
			margin-left: 100% / $grid-columns * $i;
		}
	}
}
.col-#{$name} {
	@include flex-grow(1);
	@include flex-basis(0);
	max-width: 100%;
}
.start-#{$name} {
	@include justify-content(flex-start);
	text-align: left;
}

.center-#{$name} {
	@include justify-content(center);
	text-align: center;
}

.end-#{$name} {
	@include justify-content(flex-end);
	text-align: right;
}

.top-#{$name} {
	@include align-items(flex-start);
}

.middle-#{$name} {
	@include align-items(center);
}

.bottom-#{$name} {
	@include align-items(flex-end);
}

.around-#{$name} {
	@include justify-content(space-around);
}

.between-#{$name} {
	@include justify-content(space-between);
}

.first-#{$name} {
	order: -1;
}

.last-#{$name} {
	order: 1;
}

@each $breakpoint in $breakpoints {
	$name: nth($breakpoint, 1);
	$size: nth($breakpoint, 2);
	$container: nth($breakpoint, 3);
	@media only screen and (min-width: $size) {
		.container {
			width: $container;
		}

		.col-#{$name} {
			@include flexboxgrid-sass-col-common;
			@include flex-basis(auto);
		}
		@for $i from 1 through $grid-columns {
			.col-#{$name}-#{$i} {
				@include flexboxgrid-sass-col-common;
				@include flex-basis(100% / $grid-columns * $i);
				max-width: 100% / $grid-columns * $i;
			}
		}
		@for $i from 0 through $grid-columns {
			.col-#{$name}-offset-#{$i} {
				@include flexboxgrid-sass-col-common;
				@if $i == 0 {
					margin-left: 0;
				} @else {
					margin-left: 100% / $grid-columns * $i;
				}
			}
		}
		.col-#{$name} {
			@include flex-grow(1);
			@include flex-basis(0);
			max-width: 100%;
		}
		.start-#{$name} {
			@include justify-content(flex-start);
			text-align: left;
		}

		.center-#{$name} {
			@include justify-content(center);
			text-align: center;
		}

		.end-#{$name} {
			@include justify-content(flex-end);
			text-align: right;
		}

		.top-#{$name} {
			@include align-items(flex-start);
		}

		.middle-#{$name} {
			@include align-items(center);
		}

		.bottom-#{$name} {
			@include align-items(flex-end);
		}

		.around-#{$name} {
			@include justify-content(space-around);
		}

		.between-#{$name} {
			@include justify-content(space-between);
		}

		.first-#{$name} {
			order: -1;
		}

		.last-#{$name} {
			order: 1;
		}
	}
}

/*
 Media breakpoint (sm, md, lg)
 */
@mixin media-query($media-query, $declaration: 'min-width') {
	$breakpoint-found: false;

	@each $breakpoint in $breakpoints {
		$name: nth($breakpoint, 1);
		$size: nth($breakpoint, 2);

		@if $declaration == 'max-width' {
			$size: $size - 1;
		}

		@if $media-query == $name {
			$breakpoint-found: true;

			@media only screen and ($declaration: $size) {
				@content;
			}
		}
	}

	@if $breakpoint-found == false {
		@warn 'Breakpoint "#{$media-query}" does not exist';
	}
}

@mixin unstyled-button {
	@include prefix(appearance, none, ms webkit spec);
	@include prefix(user-select, none, ms webkit spec);
	margin: 0;
	padding: 0;
	background: none;
	border: none;
	font-size: inherit;
	line-height: 1;
	cursor: pointer;
}

/*
 Helpers
 */
@function strip-units($value) {
	@return ($value / ($value * 0 + 1));
}

@function rem($pxval, $base: $font-size-base) {
	@if not unitless($pxval) {
		$pxval: strip-units($pxval);
	}
	@if not unitless($base) {
		$base: strip-units($base);
	}
	@return ($pxval / $base) * 1rem;
}

@mixin prefix($property, $value, $prefixes) {
	@each $prefix in $prefixes {
		@if $prefix == webkit {
			-webkit-#{$property}: $value;
		} @else if $prefix == moz {
			-moz-#{$property}: $value;
		} @else if $prefix == ms {
			-ms-#{$property}: $value;
		} @else if $prefix == o {
			-o-#{$property}: $value;
		} @else if $prefix == spec {
			#{$property}: $value;
		} @else  {
			@warn 'Unrecognized prefix: #{$prefix}';
		}
	}
}

@mixin transform($transform) {
	@include prefix(transform, $transform, ms webkit spec);
}

@mixin transition($transition) {
	@include prefix(transition, $transition, ms webkit spec);
}

@mixin placeholder-text($color: $color-text-field-text, $opacity: 0.6) {
	color: $color;
	opacity: $opacity;
}

@mixin error-placeholder-text($color: $color-error, $opacity: 0.5) {
	color: $color;
	opacity: $opacity;
}

@mixin gradient($side, $from, $to) {
	background: -ms-linear-gradient($side, $from 0%, $to 100%);
	background: linear-gradient(to $side, $from 0%, $to 100%);
}

/*================ #Basic Styles ================*/
body {
	font-family: "Rajdhani", sans-serif;
	background-color: $body-bg;
	color: $body-color;
	font-size: $font-size-base;
	padding-top: 85px;

	&::after {
		pointer-events: none;
		opacity: 0;
		visibility: hidden;
		content: "";
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		@include transition(all 400ms cubic-bezier(0.29, 0.63, 0.44, 1));
		background-color: rgba(0,0,0,0);
		z-index: 105;
	}
}

img {
	max-width: 100%;
}

a {
	color: $link-color;
	text-decoration: none;
	transition: all ease-in-out 150ms;

	&:hover {
		color: darken($link-color, 10%);
	}
}

svg,
symbol {
	&.icon:not(.icon--full-color) {
		circle,
		ellipse,
		g,
		line,
		path,
		polygon,
		polyline,
		rect {
			fill: inherit;
			stroke: inherit;
		}

		.icon-error__symbol {
			fill: #ffffff;
		}
	}
}

/*================ #Forms ================*/
.note,
.form-message {
	padding: 10px;
	margin: 0 0 $gutter-width;
}

.note {
	border: 1px solid $input-border-color;
}

.form-message--success {
	border: 1px solid $color-success;
	background-color: $color-success-bg;
	color: $color-success;
	display: block;
	width: 100%;
}

.form-message--error {
	color: $color-error;
	border: 1px solid $color-error;
	background-color: $color-error-bg;
	padding: 1rem 1.3rem;
	text-align: left;
	width: 100%;

	li {
		list-style-type: disc;
		list-style-position: inside;
	}

	.form-message__title {
		font-size: 1.2em;
	}

	.form-message__link, a {
		display: inline-block;
		text-decoration: underline;
		text-decoration-skip-ink: auto;
		color: $color-error;

		&:hover,
		&:focus {
			text-decoration: none;
			color: $color-error;
		}
	}
}

.input-group {
	@include display-flexbox;
	@include flex-wrap(wrap);
	@include justify-content(center);

	.form-vertical & {
		margin-bottom: $gutter-width;
	}
}

.input-group--nowrap {
	flex-wrap: nowrap;
}

.input-group--error {
	margin-bottom: (35px / 3);
}

.input-group__field,
.input-group__field input,
.input-group__btn .btn {
	min-height: 46px;
}

.input-group__field {
	@include flex-basis(15rem);
	flex-grow: 9999;
	margin-bottom: 1rem;
	border-radius: 0;
	text-align: left;

	input {
		width: 100%;
	}

	.form-vertical & {
		margin: 0;
	}
}

.input-group__field--connected {
	margin-bottom: 0;
}

.input-group__btn {
	flex-grow: 1;

	.btn {
		width: 100%;
	}
}

.form-vertical {
	input,
	select,
	textarea {
		display: block;
		width: 100%;
		margin-bottom: (35px / 1.8); // same as <p>

		&.input--error {
			margin-bottom: (35px / 3);
		}
	}

	[type="radio"],
	[type="checkbox"] {
		display: inline-block;
		width: auto;
		margin-right: 5px;
	}

	[type="submit"],
	.btn {
		display: inline-block;
		width: auto;
	}
}

input,
textarea,
select {
	border: 1px solid $input-border-color;
	background-color: $color-text-field;
	color: $color-text-field-text;
	max-width: 100%;
	line-height: 1.2;
	padding: 12px 8px;
	outline: none;

	&:focus {
		border-color: darken($input-border-color, 10%);
	}

	&[disabled] {
		cursor: default;
		background-color: $color-disabled;
		border-color: $color-disabled-border;
	}

	&.input--error {
		&::-webkit-input-placeholder {
			@include error-placeholder-text();
		}

		&::-moz-placeholder {
			@include error-placeholder-text();
		}

		&:-ms-input-placeholder {
			@include error-placeholder-text();
		}

		&::-ms-input-placeholder {
			@include error-placeholder-text($opacity: 1);
		}
	}

	&.hidden-placeholder {
		&::-webkit-input-placeholder {
			color: transparent;
		}

		&::-moz-placeholder {
			color: transparent;
		}

		&:-ms-input-placeholder {
			color: transparent;
		}

		&::-ms-input-placeholder {
			opacity: 1;
		}
	}
}

textarea {
	min-height: 100px;
}

/*================ Error styles ================*/
input,
select,
textarea {
	&.input--error {
		border-color: $color-error;
		background-color: $color-error-bg;
		color: $color-error;
		margin-bottom: (35px / 3);
	}
}

.input-error-message {
	display: flex;
	line-height: 1.3;
	color: $body-color;
	font-size: rem($font-size-base - 2px);
	margin-bottom: (35px / 3);

	.icon {
		width: 1em;
		height: 1em;
		margin-right: rem(10px);
	}
}

select {
	@include prefix(appearance, none, webkit moz spec);
	background-position: right center;
	background: {
		image: url($svg-select-icon);
		repeat: no-repeat;
		position: right 10px center;
	}
	line-height: 1.2;
	padding-right: 28px;
	text-indent: 0.01px;
	text-overflow: '';
	cursor: pointer;

}

.select-group {
	position: relative;
	z-index: 2;

	select {
		background-image: none;
		background-color: transparent;
	}

	.icon {
		height: calc(8em / 16);
		position: absolute;
		right: 0;
		top: 50%;
		transform: translateY(-50%);
		width: calc(8em / 16);
		z-index: -1;
	}
}

.select-label {
	font-size: em(12);
	text-transform: uppercase;
}

optgroup {
	font-weight: 600;
}

// Force option color (affects IE only)
option {
	color: $body-bg;
	background-color: $body-color;
}

select::-ms-expand {
	display: none;
}

.icon-error {
	fill: $color-error;
	width: rem($font-size-base - 2px);
	height: rem($font-size-base - 2px);
	margin-top: 0.1em;
	flex-shrink: 0;
}

.text-center {
	text-align: center !important;
}

.text-left {
	text-align: left !important;
}

.text-right {
	text-align: right !important;
}

.hide {
	display: none !important;
}

/*================ #Header ================*/
.header {
	position: fixed;
	background: #000;
	width: 100%;
	top: 0;
	z-index: 100;
}

.header__navigation {
	@include display-flexbox;
	@include align-items(center);
	height: 85px;
}

.header__navigation__logo {
	width: 70px;

	a {
		display: block;
	}

	img {
		display: block;
	}
}

.header__navigation__links {
	@include display-flexbox;
	@include align-items(center);
	margin-left: 35px;
	padding-left: 35px;
	border-left: 1px solid #fff;
	height: 27px;

	a {
		font-weight: 600;
		font-size: rem(13px);
		letter-spacing: 0.15em;
		color: #fff;
		text-transform: uppercase;
		margin-right: 20px;

		&:hover {
			color: darken(#fff, 15%);
		}
	}
}

.header__navigation__actions {
	@include display-flexbox;
	margin-left: auto;

	a {
		width: 25px;
		height: 25px;
		margin: 0 10px;
		cursor: pointer;

		&:hover {
			opacity: 0.8;
		}

		svg {
			object-fit: contain;
			display: block;
			width: 100%;
			height: 100%;
		}

		&.cart-link {
			width: 40px;
			position: relative;

			.cart-link__count {
				position: absolute;
				background: $link-color;
				color: #fff;
				border-radius: 10px;
				font-weight: 600;
				font-size: rem(10px);
				line-height: 16px;
				height: 15px;
				padding: 0 5px;
				right: -5px;
				bottom: -5px;
			}
		}
	}
}

/*================ #Search Bar ================*/
.search-bar {
	position: fixed;
	top: 0;
	width: 100%;
	background: #fff;
	pointer-events: none;
	transform: translateY(-100%);
	@include transition(all 400ms cubic-bezier(0.29, 0.63, 0.44, 1));
	z-index: 110;

	path {
		stroke: black;
	}
}

.search-bar__inner {
	@include display-flexbox();
	@include align-items(center);
	height: 85px;
}

.search-bar__form {
	@include flex(1 1 100%);
	position: relative;

	input {
		width: 100%;
		height: 45px;
	}

	button {
		@include unstyled-button();
		position: absolute;
		top: 2px;
		bottom: 0;
		right: 12px;
	}
}

.search-bar__close {
	margin-left: 15px;
	cursor: pointer;
}

.search-bar-active {
	&::after {
		opacity: 1;
		visibility: visible;
		pointer-events: all;
		background-color: rgba(0,0,0,0.6);
	}

	.search-bar {
		transform: translateY(0);
		pointer-events: all;
	}
}

.btn {
	@include unstyled-button();
	background: #000;
	border: 2px solid #000;
	color: #fff;
	font-size: rem(15px);
	font-weight: 600;
	padding: 10px 15px;
	text-transform: uppercase;
	@include transition(all 150ms ease-in);

	&:hover {
		background: #fff;
		color: #000;
	}
}

/*================ #Content ================*/
main {
	margin-top: 55px;
}

.section-header {
	margin-bottom: $section-spacing-small;

	@include media-query(md) {
		margin-bottom: $section-spacing;
	}
}
